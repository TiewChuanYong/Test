@page "/menuitems/create/"
@inject HttpClient _client
@inject NavigationManager _navManager

<h3>Create Menu Item</h3>

<EditForm Model="@menuItem" OnValidSubmit="CreateMenuItem">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label>Menu Item Name: </label>
        <div>
            <InputText @bind-Value="menuItem.Name" class="form-control"></InputText>
            <ValidationMessage For="@(() => menuItem.Name)" />
        </div>
    </div>

    <div class="form-group">
        <label>Menu Item Description: </label>
        <div>
            <InputText @bind-Value="menuItem.Description" class="form-control"></InputText>
            <ValidationMessage For="@(() => menuItem.Description)" />
        </div>
    </div>

    <div class="form-group">
        <label>Menu Item Price: </label>
        <div>
            <InputNumber @bind-Value="menuItem.Price" class="form-control"></InputNumber>
            <ValidationMessage For="@(() => menuItem.Price)" />
        </div>
    </div>

    <div class="form-group">
        <label>Menu Item Menu: </label>
        <div>
            <InputSelect @bind-Value="menuItem.MenuId" class="form-control">
                <option value=""> -- Select Restaurant --</option>
                @if (Menus != null)
                {
                    foreach (var menu in Menus)
                    {
                        <option value="@menu.Id">@menu.Name</option>
                    }
                }
            </InputSelect>
            <ValidationMessage For="@(() => menuItem.MenuId)" />
        </div>
    </div>

    <button type="submit" class="btn btn-success btn-block">
        Create Menu Item
    </button>
</EditForm>

@code {
    MenuItem menuItem = new MenuItem();

    private IList<Menu> Menus;

    protected async override Task OnInitializedAsync()
    {
        Menus = await _client.GetFromJsonAsync<List<Menu>>($"{Endpoints.MenusEndpoint}");
    }

    private async Task CreateMenuItem()
    {
        await _client.PostAsJsonAsync(Endpoints.MenuItemsEndpoint, menuItem);
        _navManager.NavigateTo("/menuitems/");
    }

}